version: '3.8'
services:
  db:
    image: postgres:16.4-alpine3.19
    container_name: shortener-url-db
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: blizzard
    ports:
      - 5432:5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - local-app-network-shortener-url
  prometheus:
    image: prom/prometheus:v3.1.0
    volumes:
      - "./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    networks:
      - local-app-network-shortener-url
  grafana:
    image: grafana/grafana:11.5.0
    ports:
      - 3010:3000
    networks:
      - local-app-network-shortener-url
  kong:
    image: kong:3.7
    restart: on-failure:10
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - 8000:8000
      - 8001:8001
    volumes:
      - ./kong/declarative/kong.yml:/kong/declarative/kong.yml
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - local-app-network-shortener-url
  redis:
    image: redis:7.4.2
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - local-app-network-shortener-url
    command: ["redis-server", "--appendonly", "yes"]
networks:
  local-app-network-shortener-url:
    name: local-app-network-shortener-url #definir nome da rede sem pegar tambem o nome da pasta
    driver: bridge